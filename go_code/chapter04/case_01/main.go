package main

import "fmt"

func main()  {
	/*
		运算符的介绍
	1. 算术运算符
	2. 赋值运算符
	3. 比较运算符/关系运算符
	4. 逻辑运算符
	5. 位运算符
	6. 其他运算符
	*/
	// 算术运算符是对数值型的变量进行运算的，比如加减乘除。在 Go 程序中使用非常多。
	// 重点讲解 /、%
	// 说明：如果运算的数都是整数，那么除后，去掉小数部分，保留整数部分
	fmt.Println(10 / 4) // 2

	var n1 float32 = 10 / 4 // 2.0
	fmt.Println(n1)

	// 如果我们希望保留小数部分，则需要有浮点数参与运算
	var n2 float32 = 10.0 / 4
	fmt.Println(n2)

	// 演示 % 使用
	// 看一个公式 a % b = a - a / b * b
	fmt.Println("10 % 3 =", 10 % 3)
	fmt.Println("-10 % 3 =", -10 % 3) // -10 - (-10) / 3 * 3 = -10 - (-9) = -1
	fmt.Println("10 % -3 =", 10 % -3) // 10 - 10 / (-3) * (-3) = 1
	fmt.Println("-10 % -3 =", -10 % -3) // -10 - (-10) / (-3) * (-3) = -10 - (-9) = -1

	// 演示 ++ 和 -- 的使用
	var i int = 10
	i++ // 等价于 i = i + 1
	fmt.Println("i =", i)
	i-- // 等价于 i = i -1
	fmt.Println("i =", i)
}
